((2 + 3) * 2)^2
toupper("rladies gyn em minusculo")
var_name% <- 3
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
#echo = FALSE,
fig.align = "center"
#message = FALSE,
#warning = FALSE,
#cache = TRUE
)
```{r}
?numeric()
?class()
# Mais Operadores Lógicos
grep(pattern = "Rladies", x = "Rladies Gyn")
?gsub
?substr
?rnomr
?rnorm
?seq
seq(from = "a", to = "l", by = 2)
?random
??random
?runif
sample(size = 1000, x = 1:1000, replace = FALSE)
```{r}
vet_num <- sample(size = 1000, x = 1:1000, replace = FALSE)
```
sample(size = 10, x = seq(10), replace = FALSE)
pizza <- "terca"
today()
Sys.Date()
hj <- "terca"
hj == pizza
vet_num1 <- 1:1000
head(vet_num1)
?cor
x <- 1:5
y <- c(2:4, 1, 2)
x == seq( 1, 5, by = 1)
x <- 1:5
y <- c(2:4, 1, 2)
x
y
x < y
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
#echo = FALSE,
fig.align = "center"
#message = FALSE,
#warning = FALSE,
#cache = TRUE
)
(x <- 1:5)
(y <- c(2:4, 1, 2))
x == seq(1, 3, by = 1)
x < y
vetlet1 <- "a":"e"
vetlet1 <- c("a", "b")
vetlet2 <- c("r", "s")
vetlet1 < vetlet2
Para acessar elementos de um vetor utilize o operador colchetes: **[]**.
(num_partic <- c(80, 91, 102, 113))
names(num_partic) <- c("Goiânia", "Niterói", "Lavras", "Natal")
(num_partic)
(num_partic > 100)
35 * 5
70 + 50 + 35 + 15 + 5
?array
as.array(letters)
dim(as.array(letters))
# Data.frames
diag(3)
(julho <- matrix(data = c(0, 0, 0, 1:31, 0), ncol = 7, byrow = TRUE))
dimnames(julho)
dimnames(julho)[1]
dimnames(julho)[2] <- c("dom", "seg", "ter", "qua", "qui", "sex", "sab")
dimnames(julho)[[2]] <- c("dom", "seg", "ter", "qua", "qui", "sex", "sab")
julho
sd(julho[, "qua"])
?apply
rnorm(n = 100, mean = 1, sd = 0.5),
rnorm(n = 150, mean = 2, sd = 1))
names(lista2) <- paste0("resexp",
seq(length(lista2)), sep = "_")
lista2 <- list(rnorm(n = 120, mean = 3, sd = 0.5),
rnorm(n = 100, mean = 1, sd = 0.5),
rnorm(n = 150, mean = 2, sd = 1))
names(lista2) <- paste0("resexp",
seq(length(lista2)), sep = "_")
lista2
names(lista2) <- paste0("resexp",
seq(length(lista2)),
sep = "_",
collapse = TRUE)
names(lista2) <- paste0("resexp",
seq(length(lista2)),
sep = "_",
collapse = "")
lista2
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
#echo = FALSE,
fig.align = "center"
#message = FALSE,
#warning = FALSE,
#cache = TRUE
)
paste0("resexp",
seq(length(lista2)),
sep = "_",
collapse = "")
paste0("resexp",
seq(length(lista2)),
collapse = "_")
?paste0
paste0("resexp",
seq(length(lista2)))
paste0("resexp",
seq(length(lista2)),
sep = "_")
paste("resexp",
seq(length(lista2)),
sep = "_")
lista2 <- list(rnorm(n = 120, mean = 3, sd = 0.5),
rnorm(n = 100, mean = 1, sd = 0.5),
rnorm(n = 150, mean = 2, sd = 1))
names(lista2) <- paste("resexp",
seq(length(lista2)),
sep = "_")
print(lista2)
lapply(X = lista2, FUN = function(x) quantile(x = x, probs = 0.10))
lapply(X = lista2, FUN = function(x) head(x = x))
data(mtcars)
?mtcars
apply(X = mtcars, MARGIN = 2, FUN = function(x) mean(x))
apply(X = mtcars, MARGIN = 2, FUN = function(x) class(x))
apply(X = mtcars, MARGIN = 2, FUN = function(x) max(x))
(df <- data.frame(id = c(12376, 18598, 33221, 64550, 77937),
nome = c("Isabel", "Maria Julia", "Beatriz", "Juliana", "Luisa"),
curso = c(TRUE, FALSE, TRUE, FALSE, TRUE),
idade = c(20, 21, 17, 35, 49),
freqEv = c(3, 10, 7, 8, 5),
percTempEv = c(0.8, 1, 1, 0.14, 0.5)))
(df <- data.frame(id = c(12376, 18598, 33221, 64550, 77937),
nome = c("Isabel", "Maria Julia", "Beatriz", "Juliana", "Luisa"),
curso = c(TRUE, FALSE, TRUE, FALSE, TRUE),
idade = c(20, 21, 17, 35, 49),
freqEv = c(3, 10, 7, 8, 5),
percTempEv = c(0.8, 1, 1, 0.14)))
matLin8 <- matrix(data = 1:8, ncol = 3)
matLin8
paste("resexp",
seq(length(lista2)),
collapse = "_")
?apply
julho <- matrix(data = c(0, 0, 0, 1:31, 0), ncol = 7, byrow = TRUE)
dimnames(julho)[[2]] <- c("dom", "seg", "ter", "qua", "qui", "sex", "sab")
julho
colMeans(julho)
apply(X = julho, MARGIN = 2, FUN = function(x) mean(x))
apply(X = julho, MARGIN = 1, FUN = function(x) mean(x))
data(mtcars)
apply(X = mtcars, MARGIN = 2, FUN = function(x) class(x))
apply(X = mtcars, MARGIN = 2, FUN = function(x) max(x))
?readr::read_csv2
